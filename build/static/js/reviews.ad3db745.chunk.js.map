{"version":3,"sources":["pages/Reviews.js","pages/StylesPages/Reviews.module.css"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","movieAPI","then","className","s","container","total_results","list","results","map","review","item","author","content","id","text","module","exports"],"mappings":"iPAMe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,IAA6BN,GAASO,KAAKH,KAC1C,CAACJ,IAGF,mCACE,qBAAKQ,UAAWC,IAAEC,UAAlB,SACGP,GAAqC,IAA1BA,EAAQQ,cAClB,oBAAIH,UAAWC,IAAEG,KAAjB,SACGT,EAAQU,QAAQC,KAAI,SAAAC,GAAM,OACzB,qBAAoBP,UAAWC,IAAEO,KAAjC,UACE,uBAAMR,UAAWC,IAAEQ,OAAnB,qBAAoCF,EAAOE,UAC3C,mBAAGT,UAAWC,IAAES,QAAhB,SAA0BH,EAAOG,YAF1BH,EAAOI,SAOpB,mBAAGX,UAAWC,IAAEW,KAAhB,6D,mBC1BVC,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,sBAAsB,KAAO","file":"static/js/reviews.ad3db745.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/moviedb-API';\nimport s from './StylesPages/Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    movieAPI.fetchMovieIdReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      <div className={s.container}>\n        {reviews && reviews.total_results !== 0 ? (\n          <ul className={s.list}>\n            {reviews.results.map(review => (\n              <li key={review.id} className={s.item}>\n                <span className={s.author}>Author: {review.author}</span>\n                <p className={s.content}>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className={s.text}>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.number,\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          author: PropTypes.string.isRequired,\n          content: PropTypes.string,\n        }),\n      ),\n    }),\n  ),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"Reviews_author__IavLv\",\"list\":\"Reviews_list__1ZA2t\",\"item\":\"Reviews_item__34oDg\"};"],"sourceRoot":""}