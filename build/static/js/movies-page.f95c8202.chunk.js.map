{"version":3,"sources":["components/WrapperContainer/WrapperContainer.js","components/WrapperContainer/WrapperContainer.module.css","services/moviedb-API.js","components/Searchbar/Searchbar.module.css","components/MoviesList/Movies.list.module.css","components/Searchbar/Searchbar.js","components/MoviesList/MoviesList.js","pages/MoviesPage.js"],"names":["WrapperContainer","children","className","s","wrapper","module","exports","API_KEY","BASE_URL","fetchMovies","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendMovies","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieIdCast","fetchMovieIdReviews","Searchbar","onHandleSubmit","useState","setQuery","form","onSubmit","e","preventDefault","trim","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","searchForm__input","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","searchForm__button","searchForm__button_label","MoviesList","movies","location","useLocation","list","map","id","title","backdrop_path","original_title","name","item","to","pathname","state","from","img","src","alt","MoviesPage","navigate","useNavigate","setMovies","status","setStatus","getNewQuery","URLSearchParams","search","get","useEffect","movieAPI","then","results","searchQuery","Loader","newestOnTop","rtl","pauseOnFocusLoss"],"mappings":"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","file":"static/js/movies-page.f95c8202.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './WrapperContainer.module.css';\n\nexport default function WrapperContainer({ children }) {\n  return <div className={s.wrapper}>{children}</div>;\n}\n\nWrapperContainer.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WrapperContainer_wrapper__1nrVs\"};","const API_KEY = '1659d5b138150865a2bed507fd13cdc7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendMovies() {\n  return fetchMovies(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchMovies(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieIdCast(movieId) {\n  return fetchMovies(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieIdReviews(movieId) {\n  return fetchMovies(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm__input\":\"Searchbar_searchForm__input__3CQDO\",\"searchForm__button\":\"Searchbar_searchForm__button__2mYcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Movies_list_list__3Tmk9\",\"item\":\"Movies_list_item__3fUxq\",\"img\":\"Movies_list_img__3Cakq\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onHandleSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleNameChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.info('Введите название фильма!', {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    onHandleSubmit(query);\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <input\n        className={s.searchForm__input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleNameChange}\n      />\n      <button type=\"submit\" className={s.searchForm__button}>\n        <span className={s.searchForm__button_label}>Search</span>\n      </button>\n    </form>\n  );\n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './Movies.list.module.css';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul className={s.list}>\n      {movies &&\n        movies.map(({ id, title, backdrop_path, original_title, name }) => (\n          <li key={id} className={s.item}>\n            <Link\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: location },\n              }}\n            >\n              <img\n                className={s.img}\n                src={`https://image.tmdb.org/t/p/w300${backdrop_path}`}\n                alt={original_title || name}\n              />\n              {title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      backdrop_path: PropTypes.string,\n      original_title: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport WrapperContainer from '../components/WrapperContainer';\nimport Searchbar from '../components/Searchbar';\nimport MoviesList from '../components/MoviesList';\nimport * as movieAPI from '../services/moviedb-API';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from '../components/Loader';\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  const getNewQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (!getNewQuery) {\n      return;\n    }\n    setStatus('pending');\n    movieAPI\n      .fetchSearchMovies(getNewQuery)\n      .then(({ results }) => setMovies(results));\n    setStatus('resolved');\n  }, [getNewQuery]);\n\n  const handleSearchbarSubmit = searchQuery => {\n    navigate({ search: `?query=${searchQuery}`, state: { from: location } });\n  };\n\n  return (\n    <WrapperContainer>\n      <Searchbar onHandleSubmit={handleSearchbarSubmit} />\n\n      {status === 'pending' && <Loader />}\n\n      {movies && <MoviesList movies={movies} />}\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </WrapperContainer>\n  );\n}\n"],"sourceRoot":""}